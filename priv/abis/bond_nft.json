{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CallerNotChickenManager",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TokenDoesNotExist",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chickenBondManagerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "bonder",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_chickenBondManagerAddress",
          "type": "address"
        }
      ],
      "name": "setAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260006007553480156200001657600080fd5b5060405162001737380380620017378339810160408190526200003991620001a8565b82826000620000498382620002c8565b506001620000588282620002c8565b505050620000756200006f6200008d60201b60201c565b62000091565b6008620000838282620002c8565b5050505062000394565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200010b57600080fd5b81516001600160401b0380821115620001285762000128620000e3565b604051601f8301601f19908116603f01168101908282118183101715620001535762000153620000e3565b816040528381526020925086838588010111156200017057600080fd5b600091505b8382101562000194578582018301518183018401529082019062000175565b600093810190920192909252949350505050565b600080600060608486031215620001be57600080fd5b83516001600160401b0380821115620001d657600080fd5b620001e487838801620000f9565b94506020860151915080821115620001fb57600080fd5b6200020987838801620000f9565b935060408601519150808211156200022057600080fd5b506200022f86828701620000f9565b9150509250925092565b600181811c908216806200024e57607f821691505b6020821081036200026f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002c357600081815260208120601f850160051c810160208610156200029e5750805b601f850160051c820191505b81811015620002bf57828155600101620002aa565b5050505b505050565b81516001600160401b03811115620002e457620002e4620000e3565b620002fc81620002f5845462000239565b8462000275565b602080601f8311600181146200033457600084156200031b5750858301515b600019600386901b1c1916600185901b178555620002bf565b600085815260208120601f198616915b82811015620003655788860151825594840194600190910190840162000344565b5085821015620003845787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61139380620003a46000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b8578063a22cb4651161007c578063a22cb4651461029f578063b88d4fde146102b2578063c6315aa0146102c5578063c87b56dd146102d8578063e985e9c5146102eb578063f2fde38b1461031957600080fd5b806370a0823114610258578063715018a61461026b57806381d3c435146102735780638da5cb5b1461028657806395d89b411461029757600080fd5b806323b872dd1161010a57806323b872dd146101f157806342842e0e1461020457806342966c68146102175780636352211e1461022a5780636a6278421461023d5780636c0360eb1461025057600080fd5b806301ffc9a71461014757806306fdde031461016f578063081812fc14610184578063095ea7b3146101c557806318160ddd146101da575b600080fd5b61015a610155366004610f8c565b61032c565b60405190151581526020015b60405180910390f35b61017761037e565b6040516101669190610fd4565b6101ad610192366004611007565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610166565b6101d86101d3366004611037565b61040c565b005b6101e360075481565b604051908152602001610166565b6101d86101ff366004611061565b6104f3565b6101d8610212366004611061565b6106ba565b6101d8610225366004611007565b6107b2565b6101ad610238366004611007565b6107c6565b6101e361024b36600461109d565b61081d565b610177610846565b6101e361026636600461109d565b610853565b6101d86108b6565b6101d861028136600461109d565b6108ca565b6006546001600160a01b03166101ad565b6101776108f5565b6101d86102ad3660046110b8565b610902565b6101d86102c03660046110f4565b61096e565b6009546101ad906001600160a01b031681565b6101776102e6366004611007565b610a56565b61015a6102f936600461118f565b600560209081526000928352604080842090915290825290205460ff1681565b6101d861032736600461109d565b610ae6565b60006301ffc9a760e01b6001600160e01b03198316148061035d57506380ac58cd60e01b6001600160e01b03198316145b806103785750635b5e139f60e01b6001600160e01b03198316145b92915050565b6000805461038b906111c2565b80601f01602080910402602001604051908101604052809291908181526020018280546103b7906111c2565b80156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061045557506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6104975760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600260205260409020546001600160a01b038481169116146105495760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161048e565b6001600160a01b0382166105935760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161048e565b336001600160a01b03841614806105cd57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b806105ee57506000818152600460205260409020546001600160a01b031633145b61062b5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161048e565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6106c58383836104f3565b6001600160a01b0382163b158061076e5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af115801561073e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076291906111fc565b6001600160e01b031916145b6107ad5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161048e565b505050565b6107ba610b5c565b6107c381610b87565b50565b6000818152600260205260409020546001600160a01b0316806108185760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161048e565b919050565b6000610827610b5c565b6007546001016108378382610c54565b60078054600101905592915050565b6008805461038b906111c2565b60006001600160a01b03821661089a5760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015260640161048e565b506001600160a01b031660009081526003602052604090205490565b6108be610d5f565b6108c86000610db9565b565b6108d2610d5f565b600980546001600160a01b0319166001600160a01b0383161790556107c36108b6565b6001805461038b906111c2565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6109798585856104f3565b6001600160a01b0384163b1580610a105750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906109c19033908a90899089908990600401611219565b6020604051808303816000875af11580156109e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0491906111fc565b6001600160e01b031916145b610a4f5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161048e565b5050505050565b60606000610a63836107c6565b6001600160a01b031603610a8a5760405163677510db60e11b815260040160405180910390fd5b600060088054610a99906111c2565b905011610ab55760405180602001604052806000815250610378565b6008610ac083610e0b565b604051602001610ad1929190611289565b60405160208183030381529060405292915050565b610aee610d5f565b6001600160a01b038116610b535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161048e565b6107c381610db9565b6009546001600160a01b031633146108c857604051636bfab10b60e01b815260040160405180910390fd5b6000818152600260205260409020546001600160a01b031680610bd95760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161048e565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b038216610c9e5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161048e565b6000818152600260205260409020546001600160a01b031615610cf45760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b604482015260640161048e565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6006546001600160a01b031633146108c85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048e565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606000610e1883610e9e565b600101905060008167ffffffffffffffff811115610e3857610e38611347565b6040519080825280601f01601f191660200182016040528015610e62576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610e6c57509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610edd5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f09576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f2757662386f26fc10000830492506010015b6305f5e1008310610f3f576305f5e100830492506008015b6127108310610f5357612710830492506004015b60648310610f65576064830492506002015b600a83106103785760010192915050565b6001600160e01b0319811681146107c357600080fd5b600060208284031215610f9e57600080fd5b8135610fa981610f76565b9392505050565b60005b83811015610fcb578181015183820152602001610fb3565b50506000910152565b6020815260008251806020840152610ff3816040850160208701610fb0565b601f01601f19169190910160400192915050565b60006020828403121561101957600080fd5b5035919050565b80356001600160a01b038116811461081857600080fd5b6000806040838503121561104a57600080fd5b61105383611020565b946020939093013593505050565b60008060006060848603121561107657600080fd5b61107f84611020565b925061108d60208501611020565b9150604084013590509250925092565b6000602082840312156110af57600080fd5b610fa982611020565b600080604083850312156110cb57600080fd5b6110d483611020565b9150602083013580151581146110e957600080fd5b809150509250929050565b60008060008060006080868803121561110c57600080fd5b61111586611020565b945061112360208701611020565b935060408601359250606086013567ffffffffffffffff8082111561114757600080fd5b818801915088601f83011261115b57600080fd5b81358181111561116a57600080fd5b89602082850101111561117c57600080fd5b9699959850939650602001949392505050565b600080604083850312156111a257600080fd5b6111ab83611020565b91506111b960208401611020565b90509250929050565b600181811c908216806111d657607f821691505b6020821081036111f657634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561120e57600080fd5b8151610fa981610f76565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b6000815161127f818560208601610fb0565b9290920192915050565b600080845481600182811c9150808316806112a557607f831692505b602080841082036112c457634e487b7160e01b86526022600452602486fd5b8180156112d857600181146112ed5761131a565b60ff198616895284151585028901965061131a565b60008b81526020902060005b868110156113125781548b8201529085019083016112f9565b505084890196505b50505050505061133e61132d828661126d565b64173539b7b760d91b815260050190565b95945050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a0ece86eeecc417f0d11cec6c94efb0bd473f07bfeab803bdbc678784d7d81a264736f6c63430008110033",
    "sourceMap": "351:1905:35:-:0;;;454:1;425:30;;574:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;661:5;668:7;2220:4:24;:12;661:5:35;2220:4:24;:12;:::i;:::-;-1:-1:-1;2242:6:24;:16;2251:7;2242:6;:16;:::i;:::-;;2154:111;;936:32:15;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;687:7:35::1;:18;697:8:::0;687:7;:18:::1;:::i;:::-;;574:138:::0;;;351:1905;;640:96:19;719:10;;640:96::o;2433:187:15:-;2525:6;;;-1:-1:-1;;;;;2541:17:15;;;-1:-1:-1;;;;;;2541:17:15;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:43:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:43;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:43;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:43:o;991:766::-;1109:6;1117;1125;1178:2;1166:9;1157:7;1153:23;1149:32;1146:52;;;1194:1;1191;1184:12;1146:52;1221:16;;-1:-1:-1;;;;;1286:14:43;;;1283:34;;;1313:1;1310;1303:12;1283:34;1336:61;1389:7;1380:6;1369:9;1365:22;1336:61;:::i;:::-;1326:71;;1443:2;1432:9;1428:18;1422:25;1406:41;;1472:2;1462:8;1459:16;1456:36;;;1488:1;1485;1478:12;1456:36;1511:63;1566:7;1555:8;1544:9;1540:24;1511:63;:::i;:::-;1501:73;;1620:2;1609:9;1605:18;1599:25;1583:41;;1649:2;1639:8;1636:16;1633:36;;;1665:1;1662;1655:12;1633:36;;1688:63;1743:7;1732:8;1721:9;1717:24;1688:63;:::i;:::-;1678:73;;;991:766;;;;;:::o;1762:380::-;1841:1;1837:12;;;;1884;;;1905:61;;1959:4;1951:6;1947:17;1937:27;;1905:61;2012:2;2004:6;2001:14;1981:18;1978:38;1975:161;;2058:10;2053:3;2049:20;2046:1;2039:31;2093:4;2090:1;2083:15;2121:4;2118:1;2111:15;1975:161;;1762:380;;;:::o;2273:545::-;2375:2;2370:3;2367:11;2364:448;;;2411:1;2436:5;2432:2;2425:17;2481:4;2477:2;2467:19;2551:2;2539:10;2535:19;2532:1;2528:27;2522:4;2518:38;2587:4;2575:10;2572:20;2569:47;;;-1:-1:-1;2610:4:43;2569:47;2665:2;2660:3;2656:12;2653:1;2649:20;2643:4;2639:31;2629:41;;2720:82;2738:2;2731:5;2728:13;2720:82;;;2783:17;;;2764:1;2753:13;2720:82;;;2724:3;;;2364:448;2273:545;;;:::o;2994:1352::-;3114:10;;-1:-1:-1;;;;;3136:30:43;;3133:56;;;3169:18;;:::i;:::-;3198:97;3288:6;3248:38;3280:4;3274:11;3248:38;:::i;:::-;3242:4;3198:97;:::i;:::-;3350:4;;3414:2;3403:14;;3431:1;3426:663;;;;4133:1;4150:6;4147:89;;;-1:-1:-1;4202:19:43;;;4196:26;4147:89;-1:-1:-1;;2951:1:43;2947:11;;;2943:24;2939:29;2929:40;2975:1;2971:11;;;2926:57;4249:81;;3396:944;;3426:663;2220:1;2213:14;;;2257:4;2244:18;;-1:-1:-1;;3462:20:43;;;3580:236;3594:7;3591:1;3588:14;3580:236;;;3683:19;;;3677:26;3662:42;;3775:27;;;;3743:1;3731:14;;;;3610:19;;3580:236;;;3584:3;3844:6;3835:7;3832:19;3829:201;;;3905:19;;;3899:26;-1:-1:-1;;3988:1:43;3984:14;;;4000:3;3980:24;3976:37;3972:42;3957:58;3942:74;;3829:201;-1:-1:-1;;;;;4076:1:43;4060:14;;;4056:22;4043:36;;-1:-1:-1;2994:1352:43:o;:::-;351:1905:35;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b8578063a22cb4651161007c578063a22cb4651461029f578063b88d4fde146102b2578063c6315aa0146102c5578063c87b56dd146102d8578063e985e9c5146102eb578063f2fde38b1461031957600080fd5b806370a0823114610258578063715018a61461026b57806381d3c435146102735780638da5cb5b1461028657806395d89b411461029757600080fd5b806323b872dd1161010a57806323b872dd146101f157806342842e0e1461020457806342966c68146102175780636352211e1461022a5780636a6278421461023d5780636c0360eb1461025057600080fd5b806301ffc9a71461014757806306fdde031461016f578063081812fc14610184578063095ea7b3146101c557806318160ddd146101da575b600080fd5b61015a610155366004610f8c565b61032c565b60405190151581526020015b60405180910390f35b61017761037e565b6040516101669190610fd4565b6101ad610192366004611007565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610166565b6101d86101d3366004611037565b61040c565b005b6101e360075481565b604051908152602001610166565b6101d86101ff366004611061565b6104f3565b6101d8610212366004611061565b6106ba565b6101d8610225366004611007565b6107b2565b6101ad610238366004611007565b6107c6565b6101e361024b36600461109d565b61081d565b610177610846565b6101e361026636600461109d565b610853565b6101d86108b6565b6101d861028136600461109d565b6108ca565b6006546001600160a01b03166101ad565b6101776108f5565b6101d86102ad3660046110b8565b610902565b6101d86102c03660046110f4565b61096e565b6009546101ad906001600160a01b031681565b6101776102e6366004611007565b610a56565b61015a6102f936600461118f565b600560209081526000928352604080842090915290825290205460ff1681565b6101d861032736600461109d565b610ae6565b60006301ffc9a760e01b6001600160e01b03198316148061035d57506380ac58cd60e01b6001600160e01b03198316145b806103785750635b5e139f60e01b6001600160e01b03198316145b92915050565b6000805461038b906111c2565b80601f01602080910402602001604051908101604052809291908181526020018280546103b7906111c2565b80156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061045557506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6104975760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600260205260409020546001600160a01b038481169116146105495760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161048e565b6001600160a01b0382166105935760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161048e565b336001600160a01b03841614806105cd57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b806105ee57506000818152600460205260409020546001600160a01b031633145b61062b5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161048e565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6106c58383836104f3565b6001600160a01b0382163b158061076e5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af115801561073e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076291906111fc565b6001600160e01b031916145b6107ad5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161048e565b505050565b6107ba610b5c565b6107c381610b87565b50565b6000818152600260205260409020546001600160a01b0316806108185760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161048e565b919050565b6000610827610b5c565b6007546001016108378382610c54565b60078054600101905592915050565b6008805461038b906111c2565b60006001600160a01b03821661089a5760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015260640161048e565b506001600160a01b031660009081526003602052604090205490565b6108be610d5f565b6108c86000610db9565b565b6108d2610d5f565b600980546001600160a01b0319166001600160a01b0383161790556107c36108b6565b6001805461038b906111c2565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6109798585856104f3565b6001600160a01b0384163b1580610a105750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906109c19033908a90899089908990600401611219565b6020604051808303816000875af11580156109e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0491906111fc565b6001600160e01b031916145b610a4f5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161048e565b5050505050565b60606000610a63836107c6565b6001600160a01b031603610a8a5760405163677510db60e11b815260040160405180910390fd5b600060088054610a99906111c2565b905011610ab55760405180602001604052806000815250610378565b6008610ac083610e0b565b604051602001610ad1929190611289565b60405160208183030381529060405292915050565b610aee610d5f565b6001600160a01b038116610b535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161048e565b6107c381610db9565b6009546001600160a01b031633146108c857604051636bfab10b60e01b815260040160405180910390fd5b6000818152600260205260409020546001600160a01b031680610bd95760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161048e565b6001600160a01b038116600081815260036020908152604080832080546000190190558583526002825280832080546001600160a01b031990811690915560049092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b038216610c9e5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161048e565b6000818152600260205260409020546001600160a01b031615610cf45760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b604482015260640161048e565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6006546001600160a01b031633146108c85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048e565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606000610e1883610e9e565b600101905060008167ffffffffffffffff811115610e3857610e38611347565b6040519080825280601f01601f191660200182016040528015610e62576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610e6c57509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610edd5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f09576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f2757662386f26fc10000830492506010015b6305f5e1008310610f3f576305f5e100830492506008015b6127108310610f5357612710830492506004015b60648310610f65576064830492506002015b600a83106103785760010192915050565b6001600160e01b0319811681146107c357600080fd5b600060208284031215610f9e57600080fd5b8135610fa981610f76565b9392505050565b60005b83811015610fcb578181015183820152602001610fb3565b50506000910152565b6020815260008251806020840152610ff3816040850160208701610fb0565b601f01601f19169190910160400192915050565b60006020828403121561101957600080fd5b5035919050565b80356001600160a01b038116811461081857600080fd5b6000806040838503121561104a57600080fd5b61105383611020565b946020939093013593505050565b60008060006060848603121561107657600080fd5b61107f84611020565b925061108d60208501611020565b9150604084013590509250925092565b6000602082840312156110af57600080fd5b610fa982611020565b600080604083850312156110cb57600080fd5b6110d483611020565b9150602083013580151581146110e957600080fd5b809150509250929050565b60008060008060006080868803121561110c57600080fd5b61111586611020565b945061112360208701611020565b935060408601359250606086013567ffffffffffffffff8082111561114757600080fd5b818801915088601f83011261115b57600080fd5b81358181111561116a57600080fd5b89602082850101111561117c57600080fd5b9699959850939650602001949392505050565b600080604083850312156111a257600080fd5b6111ab83611020565b91506111b960208401611020565b90509250929050565b600181811c908216806111d657607f821691505b6020821081036111f657634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561120e57600080fd5b8151610fa981610f76565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b6000815161127f818560208601610fb0565b9290920192915050565b600080845481600182811c9150808316806112a557607f831692505b602080841082036112c457634e487b7160e01b86526022600452602486fd5b8180156112d857600181146112ed5761131a565b60ff198616895284151585028901965061131a565b60008b81526020902060005b868110156113125781548b8201529085019083016112f9565b505084890196505b50505050505061133e61132d828661126d565b64173539b7b760d91b815260050190565b95945050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a0ece86eeecc417f0d11cec6c94efb0bd473f07bfeab803bdbc678784d7d81a264736f6c63430008110033",
    "sourceMap": "351:1905:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4714:335:24;;;;;;:::i;:::-;;:::i;:::-;;;565:14:43;;558:22;540:41;;528:2;513:18;4714:335:24;;;;;;;;899:18;;;:::i;:::-;;;;;;;:::i;1844:46::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1844:46:24;;;;;;-1:-1:-1;;;;;1597:32:43;;;1579:51;;1567:2;1552:18;1844:46:24;1433:203:43;2453:282:24;;;;;;:::i;:::-;;:::i;:::-;;425:30:35;;;;;;;;;2224:25:43;;;2212:2;2197:18;425:30:35;2078:177:43;2950:741:24;;;;;;:::i;:::-;;:::i;3697:396::-;;;;;;:::i;:::-;;:::i;1047:152:35:-;;;;;;:::i;:::-;;:::i;1327:149:24:-;;;;;;:::i;:::-;;:::i;762:279:35:-;;;;;;:::i;:::-;;:::i;461:21::-;;;:::i;1482:168:24:-;;;;;;:::i;:::-;;:::i;1831:101:15:-;;;:::i;1236:177:35:-;;;;;;:::i;:::-;;:::i;1201:85:15:-;1273:6;;-1:-1:-1;;;;;1273:6:15;1201:85;;924:20:24;;;:::i;2741:203::-;;;;;;:::i;:::-;;:::i;4099:427::-;;;;;;:::i;:::-;;:::i;489:40:35:-;;;;;-1:-1:-1;;;;;489:40:35;;;1797:296;;;;;;:::i;:::-;;:::i;1897:68:24:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2081:198:15;;;;;;:::i;:::-;;:::i;4714:335:24:-;4790:4;-1:-1:-1;;;;;;;;;4825:25:24;;;;:100;;-1:-1:-1;;;;;;;;;;4900:25:24;;;4825:100;:175;;;-1:-1:-1;;;;;;;;;;4975:25:24;;;4825:175;4806:194;4714:335;-1:-1:-1;;4714:335:24:o;899:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2453:282::-;2524:13;2540:12;;;:8;:12;;;;;;-1:-1:-1;;;;;2540:12:24;2571:10;:19;;;:58;;-1:-1:-1;;;;;;2594:23:24;;;;;;:16;:23;;;;;;;;2618:10;2594:35;;;;;;;;;;2571:58;2563:85;;;;-1:-1:-1;;;2563:85:24;;4801:2:43;2563:85:24;;;4783:21:43;4840:2;4820:18;;;4813:30;-1:-1:-1;;;4859:18:43;;;4852:44;4913:18;;2563:85:24;;;;;;;;;2659:15;;;;:11;:15;;;;;;:25;;-1:-1:-1;;;;;;2659:25:24;-1:-1:-1;;;;;2659:25:24;;;;;;;;;2700:28;;2659:15;;2700:28;;;;;;;2514:221;2453:282;;:::o;2950:741::-;3081:12;;;;:8;:12;;;;;;-1:-1:-1;;;;;3073:20:24;;;3081:12;;3073:20;3065:43;;;;-1:-1:-1;;;3065:43:24;;5144:2:43;3065:43:24;;;5126:21:43;5183:2;5163:18;;;5156:30;-1:-1:-1;;;5202:18:43;;;5195:40;5252:18;;3065:43:24;4942:334:43;3065:43:24;-1:-1:-1;;;;;3127:16:24;;3119:46;;;;-1:-1:-1;;;3119:46:24;;5483:2:43;3119:46:24;;;5465:21:43;5522:2;5502:18;;;5495:30;-1:-1:-1;;;5541:18:43;;;5534:47;5598:18;;3119:46:24;5281:341:43;3119:46:24;3197:10;-1:-1:-1;;;;;3197:18:24;;;;:56;;-1:-1:-1;;;;;;3219:22:24;;;;;;:16;:22;;;;;;;;3242:10;3219:34;;;;;;;;;;3197:56;:89;;;-1:-1:-1;3271:15:24;;;;:11;:15;;;;;;-1:-1:-1;;;;;3271:15:24;3257:10;:29;3197:89;3176:150;;;;-1:-1:-1;;;3176:150:24;;4801:2:43;3176:150:24;;;4783:21:43;4840:2;4820:18;;;4813:30;-1:-1:-1;;;4859:18:43;;;4852:44;4913:18;;3176:150:24;4599:338:43;3176:150:24;-1:-1:-1;;;;;3526:16:24;;;;;;;:10;:16;;;;;;;;:18;;-1:-1:-1;;3526:18:24;;;3559:14;;;;;;;;;:16;;3526:18;3559:16;;;3596:12;;;:8;:12;;;;;:17;;-1:-1:-1;;;;;;3596:17:24;;;;;;;;3631:11;:15;;;;;;3624:22;;;;;;;;3662;;3605:2;;3559:14;3526:16;3662:22;;;2950:741;;;:::o;3697:396::-;3816:26;3829:4;3835:2;3839;3816:12;:26::i;:::-;-1:-1:-1;;;;;3874:14:24;;;:19;;:170;;-1:-1:-1;3913:66:24;;-1:-1:-1;;;3913:66:24;;;3954:10;3913:66;;;5932:34:43;-1:-1:-1;;;;;6002:15:43;;;5982:18;;;5975:43;6034:18;;;6027:34;;;6097:3;6077:18;;;6070:31;-1:-1:-1;6117:19:43;;;6110:30;3999:45:24;;3913:40;;;;3999:45;;6157:19:43;;3913:66:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3913:131:24;;3874:170;3853:233;;;;-1:-1:-1;;;3853:233:24;;6643:2:43;3853:233:24;;;6625:21:43;6682:2;6662:18;;;6655:30;-1:-1:-1;;;6701:18:43;;;6694:46;6757:18;;3853:233:24;6441:340:43;3853:233:24;3697:396;;;:::o;1047:152:35:-;1097:37;:35;:37::i;:::-;1168:14;1174:7;1168:5;:14::i;:::-;1047:152;:::o;1327:149:24:-;1385:13;1427:12;;;:8;:12;;;;;;-1:-1:-1;;;;;1427:12:24;;1410:59;;;;-1:-1:-1;;;1410:59:24;;6988:2:43;1410:59:24;;;6970:21:43;7027:2;7007:18;;;7000:30;-1:-1:-1;;;7046:18:43;;;7039:40;7096:18;;1410:59:24;6786:334:43;1410:59:24;1327:149;;;:::o;762:279:35:-;810:7;829:37;:35;:37::i;:::-;918:11;;932:1;918:15;947:22;953:6;918:15;947:5;:22::i;:::-;983:11;:13;;;;;;1017:7;762:279;-1:-1:-1;;762:279:35:o;461:21::-;;;;;;;:::i;1482:168:24:-;1545:7;-1:-1:-1;;;;;1572:19:24;;1564:44;;;;-1:-1:-1;;;1564:44:24;;7327:2:43;1564:44:24;;;7309:21:43;7366:2;7346:18;;;7339:30;-1:-1:-1;;;7385:18:43;;;7378:42;7437:18;;1564:44:24;7125:336:43;1564:44:24;-1:-1:-1;;;;;;1626:17:24;;;;;:10;:17;;;;;;;1482:168::o;1831:101:15:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1236:177:35:-;1094:13:15;:11;:13::i;:::-;1323:25:35::1;:54:::0;;-1:-1:-1;;;;;;1323:54:35::1;-1:-1:-1::0;;;;;1323:54:35;::::1;;::::0;;1387:19:::1;:17;:19::i;924:20:24:-:0;;;;;;;:::i;2741:203::-;2843:10;2826:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;2826:38:24;;;;;;;;;;;;:49;;-1:-1:-1;;2826:49:24;;;;;;;;;;2891:46;;540:41:43;;;2826:38:24;;2843:10;2891:46;;513:18:43;2891:46:24;;;;;;;2741:203;;:::o;4099:427::-;4247:26;4260:4;4266:2;4270;4247:12;:26::i;:::-;-1:-1:-1;;;;;4305:14:24;;;:19;;:172;;-1:-1:-1;4344:68:24;;-1:-1:-1;;;4344:68:24;;;4432:45;-1:-1:-1;;;;;4344:40:24;;;4432:45;;4344:68;;4385:10;;4397:4;;4403:2;;4407:4;;;;4344:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4344:133:24;;4305:172;4284:235;;;;-1:-1:-1;;;4284:235:24;;6643:2:43;4284:235:24;;;6625:21:43;6682:2;6662:18;;;6655:30;-1:-1:-1;;;6701:18:43;;;6694:46;6757:18;;4284:235:24;6441:340:43;4284:235:24;4099:427;;;;;:::o;1797:296:35:-;1862:13;1919:1;1891:16;1899:7;1891;:16::i;:::-;-1:-1:-1;;;;;1891:30:35;;1887:87;;1944:19;;-1:-1:-1;;;1944:19:35;;;;;;;;;;;1887:87;2015:1;1997:7;1991:21;;;;;:::i;:::-;;;:25;:95;;;;;;;;;;;;;;;;;2043:7;2052:18;:7;:16;:18::i;:::-;2026:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1984:102;1797:296;-1:-1:-1;;1797:296:35:o;2081:198:15:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:15;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:15;;10117:2:43;2161:73:15::1;::::0;::::1;10099:21:43::0;10156:2;10136:18;;;10129:30;10195:34;10175:18;;;10168:62;-1:-1:-1;;;10246:18:43;;;10239:36;10292:19;;2161:73:15::1;9915:402:43::0;2161:73:15::1;2244:28;2263:8;2244:18;:28::i;2099:155:35:-:0;2188:25;;-1:-1:-1;;;;;2188:25:35;2174:10;:39;2170:77;;2222:25;;-1:-1:-1;;;2222:25:35;;;;;;;;;;;5620:371:24;5674:13;5690:12;;;:8;:12;;;;;;-1:-1:-1;;;;;5690:12:24;;5713:42;;;;-1:-1:-1;;;5713:42:24;;6988:2:43;5713:42:24;;;6970:21:43;7027:2;7007:18;;;7000:30;-1:-1:-1;;;7046:18:43;;;7039:40;7096:18;;5713:42:24;6786:334:43;5713:42:24;-1:-1:-1;;;;;5845:17:24;;;;;;:10;:17;;;;;;;;:19;;-1:-1:-1;;5845:19:24;;;5892:12;;;:8;:12;;;;;5885:19;;-1:-1:-1;;;;;;5885:19:24;;;;;;5922:11;:15;;;;;;5915:22;;;;;;;;5953:31;5901:2;;5845:17;5953:31;;5845:17;;5953:31;5664:327;5620:371;:::o;5243:::-;-1:-1:-1;;;;;5317:16:24;;5309:46;;;;-1:-1:-1;;;5309:46:24;;5483:2:43;5309:46:24;;;5465:21:43;5522:2;5502:18;;;5495:30;-1:-1:-1;;;5541:18:43;;;5534:47;5598:18;;5309:46:24;5281:341:43;5309:46:24;5398:1;5374:12;;;:8;:12;;;;;;-1:-1:-1;;;;;5374:12:24;:26;5366:53;;;;-1:-1:-1;;;5366:53:24;;10524:2:43;5366:53:24;;;10506:21:43;10563:2;10543:18;;;10536:30;-1:-1:-1;;;10582:18:43;;;10575:44;10636:18;;5366:53:24;10322:338:43;5366:53:24;-1:-1:-1;;;;;5509:14:24;;;;;;:10;:14;;;;;;;;:16;;;;;;5546:12;;;:8;:12;;;;;;:17;;-1:-1:-1;;;;;;5546:17:24;;;;;5579:28;5555:2;;5509:14;;5579:28;;5509:14;;5579:28;5243:371;;:::o;1359:130:15:-;1273:6;;-1:-1:-1;;;;;1273:6:15;719:10:19;1422:23:15;1414:68;;;;-1:-1:-1;;;1414:68:15;;10867:2:43;1414:68:15;;;10849:21:43;;;10886:18;;;10879:30;10945:34;10925:18;;;10918:62;10997:18;;1414:68:15;10665:356:43;2433:187:15;2525:6;;;-1:-1:-1;;;;;2541:17:15;;;-1:-1:-1;;;;;;2541:17:15;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;415:696:20:-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:20;-1:-1:-1;572:41:20;-1:-1:-1;733:28:20;;;749:2;733:28;788:280;-1:-1:-1;;819:5:20;-1:-1:-1;;;953:2:20;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:20;788:280;1032:21;-1:-1:-1;1088:6:20;415:696;-1:-1:-1;;;415:696:20:o;9889:890:21:-;9942:7;;-1:-1:-1;;;10017:15:21;;10013:99;;-1:-1:-1;;;10052:15:21;;;-1:-1:-1;10095:2:21;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:21;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:21;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:21;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:21;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:21;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:21:o;14:131:43:-;-1:-1:-1;;;;;;88:32:43;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:43:o;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:43;816:16;;809:27;592:250::o;847:396::-;996:2;985:9;978:21;959:4;1028:6;1022:13;1071:6;1066:2;1055:9;1051:18;1044:34;1087:79;1159:6;1154:2;1143:9;1139:18;1134:2;1126:6;1122:15;1087:79;:::i;:::-;1227:2;1206:15;-1:-1:-1;;1202:29:43;1187:45;;;;1234:2;1183:54;;847:396;-1:-1:-1;;847:396:43:o;1248:180::-;1307:6;1360:2;1348:9;1339:7;1335:23;1331:32;1328:52;;;1376:1;1373;1366:12;1328:52;-1:-1:-1;1399:23:43;;1248:180;-1:-1:-1;1248:180:43:o;1641:173::-;1709:20;;-1:-1:-1;;;;;1758:31:43;;1748:42;;1738:70;;1804:1;1801;1794:12;1819:254;1887:6;1895;1948:2;1936:9;1927:7;1923:23;1919:32;1916:52;;;1964:1;1961;1954:12;1916:52;1987:29;2006:9;1987:29;:::i;:::-;1977:39;2063:2;2048:18;;;;2035:32;;-1:-1:-1;;;1819:254:43:o;2260:328::-;2337:6;2345;2353;2406:2;2394:9;2385:7;2381:23;2377:32;2374:52;;;2422:1;2419;2412:12;2374:52;2445:29;2464:9;2445:29;:::i;:::-;2435:39;;2493:38;2527:2;2516:9;2512:18;2493:38;:::i;:::-;2483:48;;2578:2;2567:9;2563:18;2550:32;2540:42;;2260:328;;;;;:::o;2593:186::-;2652:6;2705:2;2693:9;2684:7;2680:23;2676:32;2673:52;;;2721:1;2718;2711:12;2673:52;2744:29;2763:9;2744:29;:::i;2784:347::-;2849:6;2857;2910:2;2898:9;2889:7;2885:23;2881:32;2878:52;;;2926:1;2923;2916:12;2878:52;2949:29;2968:9;2949:29;:::i;:::-;2939:39;;3028:2;3017:9;3013:18;3000:32;3075:5;3068:13;3061:21;3054:5;3051:32;3041:60;;3097:1;3094;3087:12;3041:60;3120:5;3110:15;;;2784:347;;;;;:::o;3136:808::-;3233:6;3241;3249;3257;3265;3318:3;3306:9;3297:7;3293:23;3289:33;3286:53;;;3335:1;3332;3325:12;3286:53;3358:29;3377:9;3358:29;:::i;:::-;3348:39;;3406:38;3440:2;3429:9;3425:18;3406:38;:::i;:::-;3396:48;;3491:2;3480:9;3476:18;3463:32;3453:42;;3546:2;3535:9;3531:18;3518:32;3569:18;3610:2;3602:6;3599:14;3596:34;;;3626:1;3623;3616:12;3596:34;3664:6;3653:9;3649:22;3639:32;;3709:7;3702:4;3698:2;3694:13;3690:27;3680:55;;3731:1;3728;3721:12;3680:55;3771:2;3758:16;3797:2;3789:6;3786:14;3783:34;;;3813:1;3810;3803:12;3783:34;3858:7;3853:2;3844:6;3840:2;3836:15;3832:24;3829:37;3826:57;;;3879:1;3876;3869:12;3826:57;3136:808;;;;-1:-1:-1;3136:808:43;;-1:-1:-1;3910:2:43;3902:11;;3932:6;3136:808;-1:-1:-1;;;3136:808:43:o;3949:260::-;4017:6;4025;4078:2;4066:9;4057:7;4053:23;4049:32;4046:52;;;4094:1;4091;4084:12;4046:52;4117:29;4136:9;4117:29;:::i;:::-;4107:39;;4165:38;4199:2;4188:9;4184:18;4165:38;:::i;:::-;4155:48;;3949:260;;;;;:::o;4214:380::-;4293:1;4289:12;;;;4336;;;4357:61;;4411:4;4403:6;4399:17;4389:27;;4357:61;4464:2;4456:6;4453:14;4433:18;4430:38;4427:161;;4510:10;4505:3;4501:20;4498:1;4491:31;4545:4;4542:1;4535:15;4573:4;4570:1;4563:15;4427:161;;4214:380;;;:::o;6187:249::-;6256:6;6309:2;6297:9;6288:7;6284:23;6280:32;6277:52;;;6325:1;6322;6315:12;6277:52;6357:9;6351:16;6376:30;6400:5;6376:30;:::i;7466:662::-;-1:-1:-1;;;;;7745:15:43;;;7727:34;;7797:15;;7792:2;7777:18;;7770:43;7844:2;7829:18;;7822:34;;;7892:3;7887:2;7872:18;;7865:31;;;7912:19;;7905:35;;;7670:4;7933:6;7983;7707:3;7962:19;;7949:49;8048:1;8042:3;8033:6;8022:9;8018:22;8014:32;8007:43;8118:3;8111:2;8107:7;8102:2;8094:6;8090:15;8086:29;8075:9;8071:45;8067:55;8059:63;;7466:662;;;;;;;;:::o;8259:198::-;8301:3;8339:5;8333:12;8354:65;8412:6;8407:3;8400:4;8393:5;8389:16;8354:65;:::i;:::-;8435:16;;;;;8259:198;-1:-1:-1;;8259:198:43:o;8580:1330::-;8857:3;8886:1;8919:6;8913:13;8949:3;8971:1;8999:9;8995:2;8991:18;8981:28;;9059:2;9048:9;9044:18;9081;9071:61;;9125:4;9117:6;9113:17;9103:27;;9071:61;9151:2;9199;9191:6;9188:14;9168:18;9165:38;9162:165;;-1:-1:-1;;;9226:33:43;;9282:4;9279:1;9272:15;9312:4;9233:3;9300:17;9162:165;9343:18;9370:133;;;;9517:1;9512:320;;;;9336:496;;9370:133;-1:-1:-1;;9403:24:43;;9391:37;;9476:14;;9469:22;9457:35;;9448:45;;;-1:-1:-1;9370:133:43;;9512:320;8206:1;8199:14;;;8243:4;8230:18;;9607:1;9621:165;9635:6;9632:1;9629:13;9621:165;;;9713:14;;9700:11;;;9693:35;9756:16;;;;9650:10;;9621:165;;;9625:3;;9815:6;9810:3;9806:16;9799:23;;9336:496;;;;;;;9848:56;9873:30;9899:3;9891:6;9873:30;:::i;:::-;-1:-1:-1;;;8522:20:43;;8567:1;8558:11;;8462:113;9848:56;9841:63;8580:1330;-1:-1:-1;;;;;8580:1330:43:o;11026:127::-;11087:10;11082:3;11078:20;11075:1;11068:31;11118:4;11115:1;11108:15;11142:4;11139:1;11132:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "baseURI()": "6c0360eb",
    "burn(uint256)": "42966c68",
    "chickenBondManagerAddress()": "c6315aa0",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(address)": "6a627842",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setAddresses(address)": "81d3c435",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CallerNotChickenManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenDoesNotExist\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chickenBondManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bonder\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_chickenBondManagerAddress\",\"type\":\"address\"}],\"name\":\"setAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/bonds/BondNFT.sol\":\"BondNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]},\"src/bonds/BondNFT.sol\":{\"keccak256\":\"0x475b796f4a9bbb3ad43912203331936f169d90ef44f2e4676212dcb3a4f926a6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e45686d79078e0eb24cebe7dcb9d4bcad6dcade3cfd3ec47c5c9d935b93de594\",\"dweb:/ipfs/QmWKJ14bNRa2ZJyFbLXYbMb2zdzSfPdiQKucKVNxykjxHn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CallerNotChickenManager"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TokenDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "chickenBondManagerAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "bonder",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_chickenBondManagerAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAddresses"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/src/",
        ":ds-test/=lib/solmate/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/bonds/BondNFT.sol": "BondNFT"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a",
        "urls": [
          "bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4",
          "dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/bonds/BondNFT.sol": {
        "keccak256": "0x475b796f4a9bbb3ad43912203331936f169d90ef44f2e4676212dcb3a4f926a6",
        "urls": [
          "bzz-raw://e45686d79078e0eb24cebe7dcb9d4bcad6dcade3cfd3ec47c5c9d935b93de594",
          "dweb:/ipfs/QmWKJ14bNRa2ZJyFbLXYbMb2zdzSfPdiQKucKVNxykjxHn"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/bonds/BondNFT.sol",
    "id": 30381,
    "exportedSymbols": {
      "BondNFT": [
        30380
      ],
      "ERC721": [
        29353
      ],
      "Ownable": [
        24882
      ],
      "SafeTransferLib": [
        29458
      ],
      "Strings": [
        25769
      ],
      "TokenDoesNotExist": [
        30233
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:2215:35",
    "nodes": [
      {
        "id": 30223,
        "nodeType": "PragmaDirective",
        "src": "42:24:35",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 30225,
        "nodeType": "ImportDirective",
        "src": "68:50:35",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC721.sol",
        "file": "@solmate/tokens/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30381,
        "sourceUnit": 29374,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30224,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29353,
              "src": "76:6:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30227,
        "nodeType": "ImportDirective",
        "src": "119:66:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30381,
        "sourceUnit": 25770,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30226,
              "name": "Strings",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25769,
              "src": "127:7:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30229,
        "nodeType": "ImportDirective",
        "src": "186:67:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30381,
        "sourceUnit": 24883,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30228,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24882,
              "src": "194:7:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30231,
        "nodeType": "ImportDirective",
        "src": "254:67:35",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/SafeTransferLib.sol",
        "file": "@solmate/utils/SafeTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30381,
        "sourceUnit": 29459,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30230,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29458,
              "src": "262:15:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30233,
        "nodeType": "ErrorDefinition",
        "src": "323:26:35",
        "nodes": [],
        "errorSelector": "ceea21b6",
        "name": "TokenDoesNotExist",
        "nameLocation": "329:17:35",
        "parameters": {
          "id": 30232,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "346:2:35"
        }
      },
      {
        "id": 30380,
        "nodeType": "ContractDefinition",
        "src": "351:1905:35",
        "nodes": [
          {
            "id": 30240,
            "nodeType": "UsingForDirective",
            "src": "393:26:35",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 30238,
              "name": "Strings",
              "nameLocations": [
                "399:7:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25769,
              "src": "399:7:35"
            },
            "typeName": {
              "id": 30239,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "411:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 30243,
            "nodeType": "VariableDeclaration",
            "src": "425:30:35",
            "nodes": [],
            "constant": false,
            "functionSelector": "18160ddd",
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "440:11:35",
            "scope": 30380,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30241,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "425:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 30242,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "454:1:35",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "id": 30245,
            "nodeType": "VariableDeclaration",
            "src": "461:21:35",
            "nodes": [],
            "constant": false,
            "functionSelector": "6c0360eb",
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "475:7:35",
            "scope": 30380,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 30244,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "461:6:35",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30247,
            "nodeType": "VariableDeclaration",
            "src": "489:40:35",
            "nodes": [],
            "constant": false,
            "functionSelector": "c6315aa0",
            "mutability": "mutable",
            "name": "chickenBondManagerAddress",
            "nameLocation": "504:25:35",
            "scope": 30380,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30246,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "489:7:35",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30249,
            "nodeType": "ErrorDefinition",
            "src": "536:32:35",
            "nodes": [],
            "errorSelector": "6bfab10b",
            "name": "CallerNotChickenManager",
            "nameLocation": "542:23:35",
            "parameters": {
              "id": 30248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "565:2:35"
            }
          },
          {
            "id": 30267,
            "nodeType": "FunctionDefinition",
            "src": "574:138:35",
            "nodes": [],
            "body": {
              "id": 30266,
              "nodeType": "Block",
              "src": "677:35:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30262,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30245,
                      "src": "687:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30263,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30255,
                      "src": "697:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "687:18:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 30265,
                  "nodeType": "ExpressionStatement",
                  "src": "687:18:35"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 30258,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30251,
                    "src": "661:5:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 30259,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30253,
                    "src": "668:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 30260,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 30257,
                  "name": "ERC721",
                  "nameLocations": [
                    "654:6:35"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29353,
                  "src": "654:6:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "654:22:35"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 30256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30251,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "600:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 30267,
                  "src": "586:19:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30250,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30253,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "621:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 30267,
                  "src": "607:21:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30252,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30255,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "644:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 30267,
                  "src": "630:22:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30254,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "630:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "585:68:35"
            },
            "returnParameters": {
              "id": 30261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "677:0:35"
            },
            "scope": 30380,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30295,
            "nodeType": "FunctionDefinition",
            "src": "762:279:35",
            "nodes": [],
            "body": {
              "id": 30294,
              "nodeType": "Block",
              "src": "819:222:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 30274,
                      "name": "_requireCallerIsChickenBondsManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30379,
                      "src": "829:35:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 30275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "829:37:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30276,
                  "nodeType": "ExpressionStatement",
                  "src": "829:37:35"
                },
                {
                  "id": 30293,
                  "nodeType": "UncheckedBlock",
                  "src": "876:159:35",
                  "statements": [
                    {
                      "assignments": [
                        30278
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 30278,
                          "mutability": "mutable",
                          "name": "tokenId",
                          "nameLocation": "908:7:35",
                          "nodeType": "VariableDeclaration",
                          "scope": 30293,
                          "src": "900:15:35",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 30277,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "900:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 30282,
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30279,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30243,
                          "src": "918:11:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 30280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "932:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "918:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "900:33:35"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 30284,
                            "name": "bonder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30269,
                            "src": "953:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 30285,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30278,
                            "src": "961:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 30283,
                          "name": "_mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29223,
                          "src": "947:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 30286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "947:22:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 30287,
                      "nodeType": "ExpressionStatement",
                      "src": "947:22:35"
                    },
                    {
                      "expression": {
                        "id": 30289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "983:13:35",
                        "subExpression": {
                          "id": 30288,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30243,
                          "src": "983:11:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 30290,
                      "nodeType": "ExpressionStatement",
                      "src": "983:13:35"
                    },
                    {
                      "expression": {
                        "id": 30291,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30278,
                        "src": "1017:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 30273,
                      "id": 30292,
                      "nodeType": "Return",
                      "src": "1010:14:35"
                    }
                  ]
                }
              ]
            },
            "functionSelector": "6a627842",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "771:4:35",
            "parameters": {
              "id": 30270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30269,
                  "mutability": "mutable",
                  "name": "bonder",
                  "nameLocation": "784:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 30295,
                  "src": "776:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "776:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "775:16:35"
            },
            "returnParameters": {
              "id": 30273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30272,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30295,
                  "src": "810:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "810:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "809:9:35"
            },
            "scope": 30380,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30309,
            "nodeType": "FunctionDefinition",
            "src": "1047:152:35",
            "nodes": [],
            "body": {
              "id": 30308,
              "nodeType": "Block",
              "src": "1087:112:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 30300,
                      "name": "_requireCallerIsChickenBondsManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30379,
                      "src": "1097:35:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 30301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1097:37:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30302,
                  "nodeType": "ExpressionStatement",
                  "src": "1097:37:35"
                },
                {
                  "id": 30307,
                  "nodeType": "UncheckedBlock",
                  "src": "1144:49:35",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 30304,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30297,
                            "src": "1174:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 30303,
                          "name": "_burn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29270,
                          "src": "1168:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256)"
                          }
                        },
                        "id": 30305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1168:14:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 30306,
                      "nodeType": "ExpressionStatement",
                      "src": "1168:14:35"
                    }
                  ]
                }
              ]
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "1056:4:35",
            "parameters": {
              "id": 30298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30297,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1069:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 30309,
                  "src": "1061:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1061:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1060:17:35"
            },
            "returnParameters": {
              "id": 30299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1087:0:35"
            },
            "scope": 30380,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30324,
            "nodeType": "FunctionDefinition",
            "src": "1236:177:35",
            "nodes": [],
            "body": {
              "id": 30323,
              "nodeType": "Block",
              "src": "1313:100:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30316,
                      "name": "chickenBondManagerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30247,
                      "src": "1323:25:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30317,
                      "name": "_chickenBondManagerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30311,
                      "src": "1351:26:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1323:54:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 30319,
                  "nodeType": "ExpressionStatement",
                  "src": "1323:54:35"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 30320,
                      "name": "renounceOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24838,
                      "src": "1387:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 30321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1387:19:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30322,
                  "nodeType": "ExpressionStatement",
                  "src": "1387:19:35"
                }
              ]
            },
            "functionSelector": "81d3c435",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 30314,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30313,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1303:9:35"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24801,
                  "src": "1303:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1303:9:35"
              }
            ],
            "name": "setAddresses",
            "nameLocation": "1245:12:35",
            "parameters": {
              "id": 30312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30311,
                  "mutability": "mutable",
                  "name": "_chickenBondManagerAddress",
                  "nameLocation": "1266:26:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 30324,
                  "src": "1258:34:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1258:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1257:36:35"
            },
            "returnParameters": {
              "id": 30315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1313:0:35"
            },
            "scope": 30380,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30367,
            "nodeType": "FunctionDefinition",
            "src": "1797:296:35",
            "nodes": [],
            "body": {
              "id": 30366,
              "nodeType": "Block",
              "src": "1877:216:35",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 30339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 30333,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30326,
                          "src": "1899:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 30332,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28878,
                        "src": "1891:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view returns (address)"
                        }
                      },
                      "id": 30334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1891:16:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 30337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1919:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 30336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1911:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 30335,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1911:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 30338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1911:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1891:30:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30344,
                  "nodeType": "IfStatement",
                  "src": "1887:87:35",
                  "trueBody": {
                    "id": 30343,
                    "nodeType": "Block",
                    "src": "1923:51:35",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 30340,
                            "name": "TokenDoesNotExist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30233,
                            "src": "1944:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1944:19:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30342,
                        "nodeType": "RevertStatement",
                        "src": "1937:26:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 30351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30347,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30245,
                              "src": "1997:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 30346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1991:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 30345,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1991:5:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1991:14:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        },
                        "id": 30349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2006:6:35",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1991:21:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 30350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2015:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1991:25:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 30363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2084:2:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 30364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1991:95:35",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30356,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30245,
                              "src": "2043:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 30357,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30326,
                                  "src": "2052:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 30358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2060:8:35",
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25652,
                                "src": "2052:16:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 30359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2052:18:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "2e6a736f6e",
                              "id": 30360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2072:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                "typeString": "literal_string \".json\""
                              },
                              "value": ".json"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                "typeString": "literal_string \".json\""
                              }
                            ],
                            "expression": {
                              "id": 30354,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2026:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 30355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2030:12:35",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "2026:16:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 30361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2026:54:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 30353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2019:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 30352,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2019:6:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 30362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2019:62:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 30331,
                  "id": 30365,
                  "nodeType": "Return",
                  "src": "1984:102:35"
                }
              ]
            },
            "baseFunctions": [
              28847
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "1806:8:35",
            "overrides": {
              "id": 30328,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1844:8:35"
            },
            "parameters": {
              "id": 30327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30326,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1823:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 30367,
                  "src": "1815:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1815:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1814:17:35"
            },
            "returnParameters": {
              "id": 30331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30330,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30367,
                  "src": "1862:13:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30329,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1862:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1861:15:35"
            },
            "scope": 30380,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30379,
            "nodeType": "FunctionDefinition",
            "src": "2099:155:35",
            "nodes": [],
            "body": {
              "id": 30378,
              "nodeType": "Block",
              "src": "2160:94:35",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 30373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 30370,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2174:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 30371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2178:6:35",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2174:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 30372,
                      "name": "chickenBondManagerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30247,
                      "src": "2188:25:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2174:39:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30377,
                  "nodeType": "IfStatement",
                  "src": "2170:77:35",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 30374,
                        "name": "CallerNotChickenManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30249,
                        "src": "2222:23:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 30375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2222:25:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 30376,
                    "nodeType": "RevertStatement",
                    "src": "2215:32:35"
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireCallerIsChickenBondsManager",
            "nameLocation": "2108:35:35",
            "parameters": {
              "id": 30368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2143:2:35"
            },
            "returnParameters": {
              "id": 30369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2160:0:35"
            },
            "scope": 30380,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30234,
              "name": "ERC721",
              "nameLocations": [
                "371:6:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29353,
              "src": "371:6:35"
            },
            "id": 30235,
            "nodeType": "InheritanceSpecifier",
            "src": "371:6:35"
          },
          {
            "baseName": {
              "id": 30236,
              "name": "Ownable",
              "nameLocations": [
                "379:7:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24882,
              "src": "379:7:35"
            },
            "id": 30237,
            "nodeType": "InheritanceSpecifier",
            "src": "379:7:35"
          }
        ],
        "canonicalName": "BondNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30380,
          24882,
          25594,
          29353
        ],
        "name": "BondNFT",
        "nameLocation": "360:7:35",
        "scope": 30381,
        "usedErrors": [
          30233,
          30249
        ]
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 35
}